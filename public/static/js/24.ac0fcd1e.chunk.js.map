{"version":3,"sources":["views/base/EditEpisode.js"],"names":["directory","db","storage","firebase","EditEpisode","props","getFiles","fullPath","Promise","resolve","reject","ref","listAll","then","res","files","items","forEach","itemRef","push","catch","error","showNotification","NOTIFICATION","ERROR","toString","onTextChange","input","currentTarget","setState","name","value","onSwitchChange","checked","onImageChange","event","target","getImagePreview","preview","file","onAssetsChange","a","type","path","delete","length","assets","state","removeAsset","holder","asset","handleSubmit","e","preventDefault","isLoading","isPublished","icon","script","location","storyID","seasonID","episodeID","promises","isEmpty","WARNING","doc","update","uploadFileAsPromise","Blob","deleteFile","all","r","updateEpisodeName","SUCCESS","backToList","console","log","image","reader","FileReader","readAsDataURL","onloadend","result","bind","this","history","pathname","undefined","firestore","collection","get","exists","data","getDownloadURL","url","fetch","response","text","endsWith","filename","uploadTask","put","on","TaskEvent","STATE_CHANGED","code","serverResponse","snapshot","downloadURL","className","color","style","width","height","onSubmit","row","xs","md","id","maxLength","onChange","required","size","shape","htmlFor","accept","variant","multiple","placeholder","rows","minHeight","src","map","display","alt","onClick","content","freeSet","cilX","Component"],"mappings":"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","file":"static/js/24.ac0fcd1e.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport './style.css'\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CForm,\r\n    CFormGroup, CImg,\r\n    CInput,\r\n    CInputFile,\r\n    CLabel,\r\n    CRow,\r\n    CSpinner, CSwitch,\r\n    CTextarea,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/storage'\r\nimport 'firebase/firestore'\r\nimport {NOTIFICATION, showNotification, updateEpisodeName} from \"../../reusable/Utility\";\r\nimport {freeSet} from \"@coreui/icons\";\r\n\r\nconst directory = '_dev';\r\nlet db = null;\r\nconst storage = firebase.storage();\r\n\r\nclass EditEpisode extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (props.location.state === undefined) {\r\n            showNotification(NOTIFICATION.ERROR, 'Episode ID not found');\r\n            this.backToList();\r\n        } else {\r\n            this.state = {\r\n                isLoading: true,\r\n                name: '',\r\n                isPublished: false,\r\n                script: '',\r\n                icon: {\r\n                    file: null,\r\n                    preview: null\r\n                },\r\n                assets: []\r\n            };\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {storyID, seasonID, episodeID} = this.props.location.state;\r\n        const path = `${directory}/stories/${storyID}/seasons/${seasonID}/episodes/${episodeID}`;\r\n        db = firebase.firestore()\r\n            .collection('stories_dev')\r\n            .doc(storyID)\r\n            .collection('seasons')\r\n            .doc(seasonID)\r\n            .collection('episodes');\r\n\r\n        db.doc(episodeID).get().then(async (doc) => {\r\n            if (doc.exists) {\r\n\r\n                this.setState({ name: doc.data().name, isPublished: (doc.data().isPublished===true) });\r\n\r\n                storage.ref(`${path}/icon.png`).getDownloadURL()\r\n                    .then((url) => {\r\n                        this.setState({ icon: {file: null, preview: url} });\r\n                    }).catch((error) => {\r\n                        showNotification(NOTIFICATION.ERROR, 'Icon not found');\r\n                    });\r\n\r\n                storage.ref(`${path}/script.txt`).getDownloadURL()\r\n                    .then((url) => {\r\n                        fetch(url).then((response) => {\r\n                            response.text().then((text) => {\r\n                                this.setState({ script: text });\r\n                            });\r\n                        }).catch((error) => {\r\n                            showNotification(NOTIFICATION.ERROR, 'Error fetching script file');\r\n                        });\r\n                    }).catch((error) => {\r\n                    showNotification(NOTIFICATION.ERROR, 'Script file not found');\r\n                });\r\n\r\n                const assets = await this.getFiles(`${path}/Assets`);\r\n                if (assets.length > 0) {\r\n                    assets.forEach(asset => {\r\n                        if (asset.endsWith('mp4')) {\r\n                            this.setState({ assets: [...this.state.assets, { file: null, preview: '', path: asset, delete: false }] });\r\n                        } else {\r\n                            storage.ref(asset).getDownloadURL()\r\n                                .then((url) => {\r\n                                    this.setState({ assets: [...this.state.assets, { file: null, preview: url, path: asset, delete: false }] });\r\n                                }).catch((error) => { showNotification(NOTIFICATION.ERROR, error.toString()); });\r\n                        }\r\n                    });\r\n                } else {\r\n                    showNotification(NOTIFICATION.ERROR, 'Assets not found');\r\n                }\r\n                this.setState({ isLoading: false });\r\n            } else {\r\n                showNotification(NOTIFICATION.ERROR, 'Invalid episode ID!');\r\n                this.backToList();\r\n            }\r\n        }).catch((error) => {\r\n            showNotification(NOTIFICATION.ERROR, `Error: ${error.toString()}`);\r\n            this.backToList();\r\n        });\r\n    }\r\n\r\n    getFiles = (fullPath) => {\r\n        return new Promise((resolve, reject) => {\r\n            storage.ref(fullPath).listAll()\r\n                .then((res) => {\r\n                    let files = [];\r\n                    res.items.forEach((itemRef) => {\r\n                        files.push(itemRef.fullPath);\r\n                    });\r\n                    resolve(files);\r\n                }).catch((error) => {\r\n                showNotification(NOTIFICATION.ERROR, error.toString());\r\n                resolve([]);\r\n            });\r\n        });\r\n    };\r\n\r\n    onTextChange = ({currentTarget: input}) => {\r\n        this.setState({[input.name]: input.value});\r\n    };\r\n\r\n    onSwitchChange = ({currentTarget: input}) => {\r\n        this.setState({[input.name]: input.checked});\r\n    };\r\n\r\n    onImageChange = event => {\r\n        if (event.target.files[0]) {\r\n            this.getImagePreview(event.target.files[0]).then(preview => {\r\n                this.setState({[event.target.name]: {file: event.target.files[0], preview: preview}});\r\n            });\r\n        }\r\n    };\r\n\r\n    onAssetsChange = async event => {\r\n        let files = [];\r\n        for (const file of event.target.files) {\r\n            let preview = null;\r\n            if (file.type === 'video/mp4') {\r\n                preview = '';\r\n            } else {\r\n                preview = await this.getImagePreview(file);\r\n            }\r\n\r\n            files.push({\r\n                file: file,\r\n                preview: preview,\r\n                path: null,\r\n                delete: false\r\n            });\r\n        }\r\n        if (files.length > 0) this.setState({assets: [...this.state.assets, ...files]});\r\n    };\r\n\r\n    removeAsset = (preview) => {\r\n        let holder = [...this.state.assets];\r\n        holder.forEach(asset => {\r\n            if (asset.preview === preview) asset.delete = true;\r\n        });\r\n        this.setState({ assets: [...holder] });\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.setState({isLoading: true});\r\n\r\n        const {name, isPublished, icon, assets, script} = this.state;\r\n        const {storyID, seasonID, episodeID} = this.props.location.state;\r\n        let promises = [];\r\n\r\n        if (name.isEmpty()) {\r\n            showNotification(NOTIFICATION.WARNING, 'Name is required', 1500);\r\n            return;\r\n        }\r\n\r\n        // Add a new document with a generated id.\r\n        db.doc(episodeID).update({\r\n            name: name,\r\n            isPublished: isPublished\r\n        }).then(() => {\r\n            const path = `${directory}/stories/${storyID}/seasons/${seasonID}/episodes/${episodeID}`;\r\n\r\n            if (icon.file) promises.push(this.uploadFileAsPromise(path, icon.file, 'icon.png'));\r\n            promises.push(this.uploadFileAsPromise(\r\n                path,\r\n                new Blob([script], {type: 'text/plain'}),\r\n                'script.txt'\r\n            ));\r\n            assets.forEach(asset => {\r\n                if (asset.file && !asset.delete) {\r\n                    promises.push(this.uploadFileAsPromise(`${path}/Assets`, asset.file));\r\n                } else if (!asset.file && asset.delete) {\r\n                    promises.push(this.deleteFile(asset.path));\r\n                }\r\n            });\r\n\r\n            Promise.all(promises).then(r => {\r\n                updateEpisodeName(episodeID, name);\r\n                showNotification(NOTIFICATION.SUCCESS, 'Episode updated successfully!');\r\n                this.backToList();\r\n            }).catch(e => {\r\n