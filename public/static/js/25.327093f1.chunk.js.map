{"version":3,"sources":["views/base/EditStory.js"],"names":["storage","firebase","db","firestore","collection","storyID","EditStory","props","getFiles","fullPath","Promise","resolve","reject","ref","listAll","then","res","files","items","forEach","itemRef","push","catch","error","showNotification","NOTIFICATION","ERROR","toString","onNameChange","input","currentTarget","setState","name","value","onImageChange","event","target","file","endsWith","getImagePreview","preview","WARNING","onAvatarsChange","a","path","delete","length","avatars","state","onFileChange","onCategoryChange","checked","id","categories","index","findIndex","category","holder","removeAvatar","avatar","handleSubmit","e","preventDefault","cover","defaultIcon","explorePageIcon","recommendedTitleIcon","avatarStyles","trim","promises","categoryIDs","isLoading","doc","update","uploadFile","deleteFile","all","r","updateStoryName","SUCCESS","backToList","image","reader","FileReader","readAsDataURL","onloadend","result","bind","this","console","log","history","pathname","location","undefined","get","exists","data","description","includes","getDownloadURL","url","directory","filename","uploadTask","put","on","TaskEvent","STATE_CHANGED","code","serverResponse","snapshot","downloadURL","className","color","style","width","height","xs","onSubmit","md","row","placeholder","maxLength","onChange","required","accept","htmlFor","variant","multiple","map","type","custom","minHeight","src","display","shape","size","onClick","param","content","freeSet","cilX","cilFile","Component"],"mappings":"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","file":"static/js/25.327093f1.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport './style.css'\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/storage'\r\nimport 'firebase/firestore'\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CForm,\r\n    CFormGroup,\r\n    CInput,\r\n    CInputFile,\r\n    CLabel,\r\n    CRow,\r\n    CInputCheckbox,\r\n    CImg, CSpinner\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport {showNotification, NOTIFICATION, updateStoryName} from \"../../reusable/Utility\";\r\nimport {freeSet} from \"@coreui/icons\";\r\n\r\n\r\n// const [collapsed, setCollapsed] = React.useState(true)\r\n// const [showElements, setShowElements] = React.useState(true)\r\n\r\nconst directory = '_dev';\r\nconst storage = firebase.storage();\r\nconst db = firebase.firestore().collection(\"stories_dev\");\r\n\r\nlet storyID = '';\r\n\r\nclass EditStory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (props.location.state === undefined) {\r\n            showNotification(NOTIFICATION.ERROR, 'Story ID not found');\r\n            this.backToList();\r\n        } else {\r\n            storyID = props.location.state.id\r\n        }\r\n\r\n        this.state = {\r\n            isLoading: true,\r\n            name: '',\r\n            categories: [\r\n                {\r\n                    id: '5QEVhrCEvITIiaBFIE8f',\r\n                    name: 'Thriller',\r\n                    checked: false\r\n                },\r\n                {\r\n                    id: 'Xj95jggxg9D4RFGy0mdU',\r\n                    name: 'Romance',\r\n                    checked: false\r\n                },\r\n                {\r\n                    id: 'pQ1Qbg8qEwixkWYUh53q',\r\n                    name: 'Fantasy',\r\n                    checked: false\r\n                }\r\n            ],\r\n            cover: {\r\n                file: null,\r\n                preview: null\r\n            },\r\n            defaultIcon: {\r\n                file: null,\r\n                preview: null\r\n            },\r\n            explorePageIcon: {\r\n                file: null,\r\n                preview: null\r\n            },\r\n            recommendedTitleIcon: {\r\n                file: null,\r\n                preview: null\r\n            },\r\n            avatars: [],\r\n            avatarStyles: {\r\n                file: null,\r\n                preview: null\r\n            },\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        db.doc(storyID).get().then(async (doc) => {\r\n            if (doc.exists) {\r\n                const { name, description, categories } = doc.data();\r\n                const path = `_dev/stories/${storyID}`;\r\n                let holder = [...this.state.categories];\r\n\r\n                holder.forEach(category => {\r\n                    if (categories.includes(category.id)) category.checked = true;\r\n                });\r\n\r\n                this.setState({ name: name, categories: [...holder] });\r\n\r\n                storage.ref(`${path}/cover.png`).getDownloadURL()\r\n                    .then((url) => {\r\n                        this.setState({ cover: {file: null, preview: url} });\r\n                    }).catch((error) => { showNotification(NOTIFICATION.ERROR, error.toString()); });\r\n\r\n                storage.ref(`${path}/icon.png`).getDownloadURL()\r\n                    .then((url) => {\r\n                        this.setState({ defaultIcon: {file: null, preview: url} });\r\n                    }).catch((error) => { showNotification(NOTIFICATION.ERROR, error.toString()); });\r\n\r\n                storage.ref(`${path}/rect2x_icon.png`).getDownloadURL()\r\n                    .then((url) => {\r\n                        this.setState({ explorePageIcon: {file: null, preview: url} });\r\n                    }).catch((error) => { showNotification(NOTIFICATION.ERROR, error.toString()); });\r\n\r\n                storage.ref(`${path}/rect_icon.png`).getDownloadURL()\r\n                    .then((url) => {\r\n                        this.setState({ recommendedTitleIcon: {file: null, preview: url} });\r\n                    }).catch((error) => { showNotification(NOTIFICATION.ERROR, error.toString()); });\r\n\r\n                const avatars = await this.getFiles(`${path}/Avatars`);\r\n                avatars.forEach(avatar => {\r\n                    if (avatar.endsWith('png')) {\r\n                        storage.ref(avatar).getDownloadURL()\r\n                            .then((url) => {\r\n                                // this.setState({ recommendedTitleIcon: {file: null, preview: url} });\r\n                                this.setState({ avatars: [...this.state.avatars, { file: null, preview: url, path: avatar, delete: false }] });\r\n                            }).catch((error) => { showNotification(NOTIFICATION.ERROR, error.toString()); });\r\n                    }\r\n                });\r\n                this.setState({ isLoading: false });\r\n            } else {\r\n                showNotification(NOTIFICATION.ERROR, 'Invalid book ID!');\r\n                this.backToList();\r\n            }\r\n        }).catch((error) => {\r\n            showNotification(NOTIFICATION.ERROR, `Error: ${error.toString()}`);\r\n            this.backToList();\r\n        });\r\n    }\r\n\r\n    getFiles = (fullPath) => {\r\n        return new Promise((resolve, reject) => {\r\n            storage.ref(fullPath).listAll()\r\n                .then((res) => {\r\n                    let files = [];\r\n                    res.items.forEach((itemRef) => {\r\n                        files.push(itemRef.fullPath);\r\n                    });\r\n                    resolve(files);\r\n                }).catch((error) => {\r\n                showNotification(NOTIFICATION.ERROR, error.toString());\r\n                resolve([]);\r\n            });\r\n        });\r\n    };\r\n\r\n    onNameChange = ({currentTarget: input}) => {\r\n        this.setState({name: input.value});\r\n    };\r\n    onImageChange = event => {\r\n        if (event.target.files[0]) {\r\n            let file = event.target.files[0];\r\n            if (file.name.endsWith('.png')) {\r\n                this.getImagePreview(file).then(preview => {\r\n                    this.setState({[event.target.name]: {file: file, preview: preview}});\r\n                });\r\n            } else {\r\n                showNotification(NOTIFICATION.WARNING, 'Only .png files allowed', 1000);\r\n            }\r\n        }\r\n    };\r\n    onAvatarsChange = async event => {\r\n        let files = [];\r\n        for (const file of event.target.files) {\r\n            if (file.name.endsWith('.png')) {\r\n                let preview = await this.getImagePreview(file);\r\n                files.push({\r\n                    file: file,\r\n                    preview: preview,\r\n                    path: null,\r\n                    delete: false\r\n                });\r\n            } else {\r\n                showNotification(NOTIFICATION.WARNING, 'Only .png files allowed', 1000);\r\n            }\r\n        }\r\n        if (files.length > 0) this.setState({avatars: [...this.state.avatars, ...files]});\r\n    };\r\n    onFileChange = event => {\r\n        let file = event.target.files[0];\r\n        if (file.name.endsWith('.txt')) {\r\n            this.setState({[event.target.name]: {file: file}});\r\n        } else {\r\n            showNotification(NOTIFICATION.WARNING, 'Only .txt files allowed', 1000);\r\n        }\r\n    };\r\n    onCategoryChange = event => {\r\n        let {checked, id} = event.target;\r\n        let {categories} = this.state;\r\n\r\n        const index = categories.findIndex(category => category.id === id);\r\n        let holder = [...categories];\r\n        holder[index].checked = checked;\r\n        this.setState({categories: [...holder]});\r\n    };\r\n\r\n    removeAvatar = (preview) => {\r\n        let holder = [...this.state.avatars];\r\n        holder.forEach(avatar => {\r\n            if (avatar.preview === preview) avatar.delete = true;\r\n        });\r\n        this.setState({ avatars: [...holder] });\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const {\r\n            name,\r\n            categories,\r\n            cover,\r\n            defaultIcon,\r\n            explorePageIcon,\r\n            recommendedTitleIcon,\r\n            avatars,\r\n            avatarStyles\r\n        } = this.state;\r\n\r\n        if (name.trim() === '') {\r\n            showNotification(NOTIFICATION.WARNING, 'Name is required', 1500);\r\n            return;\r\n        }\r\n\r\n        let promises = [];\r\n\r\n        let categoryIDs = [];\r\n        categories.forEach(category => {\r\n            if (category.checked) categoryIDs.push(category.id);\r\n        })\r\n        if (categoryIDs.length === 0) {\r\n            showNotification(NOTIFICATION.ERROR, 'At least 1 category is required');\r\n            return;\r\n        }\r\n\r\n        this.setState({isLoading: true});\r\n\r\n        // Add a new document with a generated id.\r\n        db.doc(storyID).update({\r\n            name: name,\r\n            categories: categoryIDs\r\n        }).then(() => {\r\n            let path = `${directory}/stories/${storyID}`;\r\n\r\n            if (cover.file) promises.push(this.uploadFile(path, cover.file, 'cover.png'));\r\n            if (defaultIcon.file) promises.push(this.uploadFile(path, defaultIcon.file, 'icon.png'));\r\n            if (explorePageIcon.file) promises.push(this.uploadFile(path, explorePageIcon.file, 'rect2x_icon.png'));\r\n            if (recommendedTitleIcon.file) promises.push(this.uploadFile(path, recommendedTitleIcon.file, 'rect_icon.png'));\r\n            if (avatarStyles.file) promises.push(this.uploadFile(`${path}/Avatars`, avatarStyles.file, 'style.txt'));\r\n\r\n            avatars.forEach(avatar => {\r\n                if (avatar.file && !avatar.delete) {\r\n                    promises.push(this.uploadFile(`${path}/Avatars`, avatar.file));\r\n                } else if (!avatar.file && avatar.delete) {\r\n                    promises.push(this.deleteFile(avatar.path));\r\n                }\r\n            });\r\n\r\n            Promise.all(promises).then(r => {\r\n                updateStoryName(storyID, name);\r\n                showNotification(NOTIFICATION.SUCCESS, 'Book updated successfully!');\r\n                this.backToList();\r\n            }).catch(e => {\r\n                showNotification(NOTIFICATION.ERROR, 'Failed to upload files. Try again!');\r\n                this.setState({isLoading: false});\r\n            });\r\n\r\n        }).catch((error) => {\r\n            showNotification(NOTIFICATION.ERROR, 'Something went wrong. Try again!');\r\n            this.setState({isLoading: false});\r\n        });\r\n    };\r\n\r\n    //Handle waiting to upload each file using promise\r\n    uploadFile(directory, file, filename = null) {\r\n        return new Promise(function (resolve, reject) {\r\n            filename = filename ? filename : file.name ;\r\n            const storageRef = firebase.storage().ref(directory + \"/\" + filename);\r\n            //Upload file\r\n            let uploadTask = storageRef.put(file);\r\n            // Listen for state changes, errors, and completion of the upload.\r\n            uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED,\r\n                null,\r\n                (error) => {\r\n                    // A full list of error codes is available at\r\n                    // https://firebase.google.com/docs/storage/web/handle-errors\r\n                    switch (error.code) {\r\n                        case 'storage/unauthorized':\r\n